#!/usr/bin/env zsh

set -e

function assert-equal {
    local expected=$1
    local actual=$2

    echo
    if [[ $expected == $actual ]]; then
        echo 'Test passed.'
        echo
    else
        echo 'Test failed.'
        echo 'Expected output:'
        hexdump -C <<< $expected
        echo 'Actual output:'
        hexdump -C <<< $actual
        echo
        return 1
    fi
}

function run {
    docker run \
        --rm \
        --volume=/var/run/docker.sock:/var/run/docker.sock:ro \
        --volume=$PWD/test:/test:ro \
        samirtalwar/docker-compilation-images \
        $@
}


dir=$(cd $(dirname $0)/.. && pwd)
cd $dir

if [[ $# -eq 0 ]]; then
    tests=(
        hello-world
        default-name
        copy-directories
    )
else
    tests=$@
fi

./build

function test-hello-world {
    local tag=samirtalwar/docker-compilation-images-test-hello-world
    run --tag=run=${tag} /test/hello-world
    actual="$(docker run --rm --interactive --tty $tag)"
    assert-equal "$(echo -e 'Hello, world!\r\n')" $actual
}

function test-default-name {
    local tag=samirtalwar/docker-compilation-images-test-default-name
    run --tag=build=${tag}-build --tag=${tag} /test/default-name
    actual="$(docker run --rm --interactive --tty $tag)"
    assert-equal "$(echo -e 'Hello, 世界\r\n')" $actual
}

function test-copy-directories {
    local tag=samirtalwar/docker-compilation-images-test-copy-directories
    run --tag=build=${tag}-build --tag=app=${tag} /test/copy-directories
    actual="$(docker run --rm --interactive --tty $tag)"
    assert-equal "$(echo -e 'Example Domain\r\n')" $actual
}

for name in $tests; do
    test-$name
done
